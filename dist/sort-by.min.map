{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/map-accents.js","webpack:///./src/ignore-accent.js","webpack:///./src/sort-items.js","webpack:///./src/default-sort.js","webpack:///./src/memoize.js","webpack:///./src/escapeRegExp.js","webpack:///./src/generate-char-codes.js","webpack:///./src/sort-by.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","accents","replacements","unshift","apply","CHARS","_generateCharCodes2","default","split","_generateCharCodes","Array","text","_mapAccents","forEach","charCode","replace","getPattern","toUpperCase","accent","_escapeRegExp2","String","fromCharCode","RegExp","prevItems","nextItems","ordered","comparer","DESC","prev","next","asc","test","cache","_ignoreAccent2","_ignoreAccent","func","_len","arguments","length","args","_key","key","JSON","stringify","ESCAPE_CHARS","charcodes","push","charCodeAt","sortBy","normalizeString","items","concat","array","parser","item","arrLength","sort","_defaultSort2","_sortItems2","mapAccents","_mapAccents2"],"mappings":"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","file":"sort-by.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"sortBy\"] = factory();\n\telse\n\t\troot[\"sortBy\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","import generateCharCodes from './generate-char-codes';\n\nconst unshift = Array.prototype.unshift;\n\nexport const CHARS = {\n  accents: [\n    194, 226, 192, 224, 193, 225, 196, 228, 195, 227, 197, 229, // ÂâÀàÁáÄäÃãÅå\n    202, 234, 200, 232, 201, 233, 203, 235, // ÊêÈèÉéËë\n    206, 238, 204, 236, 205, 237, 207, 239, // ÎîÌìÍíÏï\n    212, 244, 210, 242, 211, 243, 214, 246, 213, 245, // ÔôÒòÓóÖöÕõ\n    219, 251, 217, 249, 218, 250, 220, 252, // ÛûÙùÚúÜü\n    209, 241, 221, 253, 255, // ÑñÝýÿ\n  ],\n  replacements: 'AaAaAaAaAaAaEeEeEeEeIiIiIiIiOoOoOoOoOoUuUuUuUuNnYyy'.split(''),\n};\n\n/**\n * Registers a map of accents in order to sort strings correctly.\n *\n * @param {String} accents: the string with the accents\n * @param {String} replacements: the replacement for each accent\n */\nexport default function mapAccents(accents, replacements) {\n  unshift.apply(CHARS.accents, generateCharCodes(accents));\n  unshift.apply(CHARS.replacements, replacements.split(''));\n}\n","import {CHARS} from './map-accents';\nimport escapeRegExp from './escapeRegExp';\nimport memoize from './memoize';\n\nconst getPattern = memoize((charCode) => {\n  const accent = escapeRegExp(String.fromCharCode(charCode));\n  return new RegExp(accent, 'g');\n});\n\n/**\n * Replaces accented characters to its equivalent with no accent.\n *\n * @param  {String} text: the text to transform\n * @return {String}\n */\nexport default function ignoreAccent(text) {\n  CHARS.accents.forEach((charCode, i) => {\n    text = text.replace(getPattern(charCode), CHARS.replacements[i]);\n  });\n  // ignores case sensitive\n  return text.toUpperCase();\n}\n","const DESC = /^desc:\\s*/i;\n\n/**\n * @private\n *\n * Compares each element and defines the sorting mode.\n * @see http://ow.ly/UvDD309zozK\n *\n * @param  {Any} prev: n element to compare\n * @param  {Any} next: n+1 element to compare\n * @return {Number}\n */\nfunction comparer(prev, next) {\n  let asc = 1;\n  if (typeof prev === 'string') {\n    if (DESC.test(prev)) asc = -1;\n  }\n  if (prev === next) return 0;\n  return (prev > next ? 1 : -1) * asc;\n}\n\n/**\n * Compares each decorated element.\n *\n * @param  {Array} prevItems: decorated element at n index to compare\n * @param  {Array} nextItems: decorated element at n+1 index to compare\n * @return {Number}\n */\nexport default function sortItems(prevItems, nextItems) {\n  let i, ordered;\n  for (i in prevItems) { // eslint-disable-line\n    ordered = comparer(prevItems[i], nextItems[i]);\n    if (ordered) return ordered;\n  }\n  return 0;\n}\n","import ignoreAccent from './ignore-accent';\n\n/**\n * Creates a closure that encapsulates the default sorting function.\n *\n * @return {Function}\n */\nexport default function defaultSort() {\n  const cache = {};\n\n  /**\n   * Defines the default sorting mode (ASC)\n   *\n   * @param  {Any} prev: element at n index to compare\n   * @param  {Any} next: element at n+1 index to compare\n   * @return {Number}\n   */\n  return function sort(prev, next) {\n    if (typeof prev === 'string') {\n      if (!(prev in cache)) cache[prev] = ignoreAccent(prev);\n      if (!(next in cache)) cache[next] = ignoreAccent(next);\n      prev = cache[prev];\n      next = cache[next];\n    }\n    if (prev === next) return 0;\n    return (prev > next ? 1 : -1);\n  };\n}\n","/**\n * High-order function that memoizes a function, by creating a scope\n * to store the result of each function call, returning the cached\n * result when the same inputs is given.\n *\n * @description\n * Memoization is an optimization technique used primarily to speed up\n * functions by storing the results of expensive function calls, and returning\n * the cached result when the same inputs occur again.\n *\n * Each time a memoized function is called, its parameters are used as keys to index the cache.\n * If the index (key) is present, then it can be returned, without executing the entire function.\n * If the index is not cached, then all the body of the function is executed, and the result is\n * added to the cache.\n *\n * @see https://www.sitepoint.com/implementing-memoization-in-javascript/\n * @see https://gist.github.com/jherax/a3208b5c3d342a756008444ad81d8045\n *\n * @param  {Function} func: function to memoize\n * @return {Function}\n */\nexport default function memoize(func) {\n  const cache = {};\n  return function memoized(...args) {\n    const key = JSON.stringify(args);\n    if (key in cache) return cache[key];\n    cache[key] = func(...args);\n    return cache[key];\n  };\n}\n","/**\n * @private\n */\nconst ESCAPE_CHARS = /[.*+?^=!:${}()|\\-[\\]/\\\\]/g;\n\n/**\n * Escapes the special characters in the entry parameter, so that\n * it can be used as a pattern in a regular expression constructor.\n *\n * @param  {String} text: special characters to escape\n * @return {String}\n */\nexport default function escapeRegExp(text) {\n  return text.replace(ESCAPE_CHARS, '\\\\$&');\n}\n","/**\n * Gets the char-code value for every character in a text.\n *\n * @param  {String} text: the values to be translated to the unicode char-code\n * @return {Array<Number>}\n */\nexport default function generateCharCodes(text) {\n  const charcodes = [];\n  for (let i = 0; i < text.length; i += 1) {\n    charcodes.push(text.charCodeAt(i));\n  }\n  return charcodes;\n}\n","/**\n * Sorts an array by allowing multiple sorting criteria.\n *\n * It applies the Schwartzian transform:\n * https://en.wikipedia.org/wiki/Schwartzian_transform\n *\n * Author: David Rivera\n * Github: https://github.com/jherax\n * License: \"MIT\"\n *\n * You can fork this project on github:\n * https://github.com/jherax/array-sort-by.git\n */\nimport ignoreAccent from './ignore-accent';\nimport defaultSort from './default-sort';\nimport sortItems from './sort-items';\nimport mapAccents from './map-accents';\n\nconst normalizeString = (items) => {\n  items = [].concat(items);\n  for (let i = items.length - 1; i >= 0; i -= 1) {\n    if (typeof items[i] === 'string') {\n      items[i] = ignoreAccent(items[i]);\n    }\n  }\n  return items;\n};\n\n/**\n * @public\n *\n * Sorts an array by allowing multiple sorting criteria.\n *\n * @param  {Array} array: the list of elements to sort\n * @param  {Function} parser: transforms each item and specifies the sorting mode\n * @return {Array}\n */\nexport default function sortBy(array, parser) {\n  let i, item;\n  const arrLength = array.length;\n  if (typeof parser !== 'function') {\n    return array.sort(defaultSort());\n  }\n  // Schwartzian transform (decorate-sort-undecorate)\n  for (i = arrLength; i;) {\n    item = array[i -= 1];\n    // decorate the array\n    array[i] = [].concat(\n      normalizeString(parser.call(null, item, i)),\n      item,\n    );\n  }\n  // console.log('decorated:', JSON.stringify(array));\n  array.sort(sortItems);\n  // undecorate the array\n  for (i = arrLength; i;) {\n    item = array[i -= 1];\n    array[i] = item[item.length - 1];\n  }\n  return array;\n}\n\nsortBy.mapAccents = mapAccents;\n"],"sourceRoot":""}